{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.status = Game.Status.idle;\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.state = initialState;\n        this.score = 0;\n        this.rows = 4;\n        this.columns = 4;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"hasEmptyTile\",\n            value: function hasEmptyTile() {\n                for(var r = 0; r < this.rows; r++)for(var c = 0; c < this.columns; c++){\n                    if (this.state[r][c] === 0) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"setTwo\",\n            value: function setTwo() {\n                if (!this.hasEmptyTile()) return;\n                var found = false;\n                while(!found){\n                    var r = Math.floor(Math.random() * this.rows);\n                    var c = Math.floor(Math.random() * this.columns);\n                    if (this.state[r][c] === 0) {\n                        this.state[r][c] = Math.random() >= 0.9 ? 4 : 2;\n                        found = true;\n                    }\n                }\n                this.updateTiles();\n            }\n        },\n        {\n            key: \"filterZero\",\n            value: function filterZero(row) {\n                return row.filter(function(num) {\n                    return num !== 0;\n                });\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(row) {\n                var changedRow = this.filterZero(row);\n                for(var i = 0; i < changedRow.length; i++)if (changedRow[i] === changedRow[i + 1]) {\n                    changedRow[i] += changedRow[i + 1];\n                    changedRow[i + 1] = 0;\n                    this.score += changedRow[i];\n                }\n                changedRow = this.filterZero(changedRow);\n                while(changedRow.length < 4)changedRow.push(0);\n                return changedRow;\n            }\n        },\n        {\n            key: \"updateState\",\n            value: function updateState(state) {\n                this.state = state;\n                this.updateTiles();\n                this.setTwo();\n            }\n        },\n        {\n            key: \"updateTiles\",\n            value: function updateTiles() {\n                var fieldRow = document.querySelectorAll(\".field-row\");\n                for(var i = 0; i < fieldRow.length; i++){\n                    var cells = fieldRow[i].querySelectorAll(\".field-cell\");\n                    for(var j = 0; j < cells.length; j++){\n                        var num = this.state[i][j];\n                        cells[j].classList = \"field-cell\";\n                        cells[j].innerHTML = \"\";\n                        if (num > 0) {\n                            cells[j].classList.add(\"field-cell--\".concat(num));\n                            cells[j].innerHTML = num;\n                        }\n                    }\n                }\n                this.checkGameOver();\n                this.checkGameWin();\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove(state) {\n                return state.some(function(arr) {\n                    return arr.includes(0);\n                });\n            }\n        },\n        {\n            key: \"checkUpdate\",\n            value: function checkUpdate(state) {\n                return JSON.stringify(this.state) !== JSON.stringify(state);\n            }\n        },\n        {\n            key: \"checkGameWin\",\n            value: function checkGameWin() {\n                var _this = this;\n                this.state.flat().some(function(tile) {\n                    if (tile === 2048) _this.status = Game.Status.win;\n                });\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.hasEmptyTile()) return;\n                for(var r = 0; r < this.rows; r++)for(var c = 0; c < this.columns; c++){\n                    if (r < 3 && this.state[r][c] === this.state[r + 1][c] || c < 3 && this.state[r][c] === this.state[r][c + 1]) return;\n                }\n                this.status = Game.Status.lose;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.getStatus() !== Game.Status.playing && this.getStatus() !== Game.Status.win) return;\n                var newState = this.getState().map(function(row) {\n                    return _this.slide(row);\n                });\n                if (this.checkUpdate(newState)) this.updateState(newState);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.getStatus() !== Game.Status.playing && this.getStatus() !== Game.Status.win) return;\n                var newState = this.getState().map(function(row) {\n                    return _this.slide((0, $227c6742e0ff6f82$export$71511d61b312f219)(row).reverse());\n                });\n                var reversedState = newState.map(function(row) {\n                    return row.reverse();\n                });\n                if (this.checkUpdate(reversedState)) this.updateState(reversedState);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.getStatus() !== Game.Status.playing && this.getStatus() !== Game.Status.win) return;\n                var newState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.state.map(function(arr) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(arr);\n                }));\n                for(var c = 0; c < this.columns; c++){\n                    var row = [\n                        this.state[0][c],\n                        this.state[1][c],\n                        this.state[2][c],\n                        this.state[3][c]\n                    ];\n                    row = this.slide(row);\n                    for(var r = 0; r < this.rows; r++)newState[r][c] = row[r];\n                }\n                if (this.canMove(this.state.slice(0, 3)) || this.checkUpdate(newState)) this.updateState(newState);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.getStatus() !== Game.Status.playing && this.getStatus() !== Game.Status.win) return;\n                var newState = (0, $227c6742e0ff6f82$export$71511d61b312f219)(this.state.map(function(arr) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(arr);\n                }));\n                for(var c = 0; c < this.columns; c++){\n                    var row = [\n                        this.state[0][c],\n                        this.state[1][c],\n                        this.state[2][c],\n                        this.state[3][c]\n                    ];\n                    row = this.slide(row.reverse());\n                    row.reverse();\n                    for(var r = 0; r < this.rows; r++)newState[r][c] = row[r];\n                }\n                if (this.canMove(this.state.slice(1)) || this.checkUpdate(newState)) this.updateState(newState);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.Status.playing;\n                this.setTwo();\n                this.setTwo();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = Game.Status.idle;\n                this.state = JSON.parse(JSON.stringify(this.initialState));\n                this.score = 0;\n                this.updateTiles();\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"Status\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports([\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n]);\nvar $197cd56b15c33885$var$button = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$showMessage() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus === \"playing\") $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    else if (gameStatus === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    else if (gameStatus === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    else if (gameStatus === \"idle\") {\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    }\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function(e) {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.classList.replace(\"start\", \"restart\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$button.classList.replace(\"restart\", \"start\");\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$score.textContent = 0;\n    }\n    $197cd56b15c33885$var$showMessage();\n});\ndocument.addEventListener(\"keyup\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\" && $197cd56b15c33885$var$game.getStatus() !== \"win\") return;\n    switch(e.code){\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$showMessage();\n});\n\n})();\n//# sourceMappingURL=index.2954f935.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game([\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n]);\n\nconst button = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction showMessage() {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'playing') {\n    messageStart.classList.add('hidden');\n  } else if (gameStatus === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (gameStatus === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (gameStatus === 'idle') {\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n}\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    game.start();\n    button.classList.replace('start', 'restart');\n    button.textContent = 'Restart';\n  } else {\n    game.restart();\n    button.classList.replace('restart', 'start');\n    button.textContent = 'Start';\n    score.textContent = 0;\n  }\n\n  showMessage();\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (game.getStatus() !== 'playing' && game.getStatus() !== 'win') {\n    return;\n  }\n\n  switch (e.code) {\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  score.textContent = game.getScore();\n  showMessage();\n});\n","'use strict';\n\nclass Game {\n  static Status = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.Status.idle;\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.state = initialState;\n    this.score = 0;\n\n    this.rows = 4;\n    this.columns = 4;\n  }\n\n  hasEmptyTile() {\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.columns; c++) {\n        if (this.state[r][c] === 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  setTwo() {\n    if (!this.hasEmptyTile()) {\n      return;\n    }\n\n    let found = false;\n\n    while (!found) {\n      const r = Math.floor(Math.random() * this.rows);\n      const c = Math.floor(Math.random() * this.columns);\n\n      if (this.state[r][c] === 0) {\n        this.state[r][c] = Math.random() >= 0.9 ? 4 : 2;\n        found = true;\n      }\n    }\n\n    this.updateTiles();\n  }\n\n  filterZero(row) {\n    return row.filter((num) => num !== 0);\n  }\n\n  slide(row) {\n    let changedRow = this.filterZero(row);\n\n    for (let i = 0; i < changedRow.length; i++) {\n      if (changedRow[i] === changedRow[i + 1]) {\n        changedRow[i] += changedRow[i + 1];\n        changedRow[i + 1] = 0;\n        this.score += changedRow[i];\n      }\n    }\n\n    changedRow = this.filterZero(changedRow);\n\n    while (changedRow.length < 4) {\n      changedRow.push(0);\n    }\n\n    return changedRow;\n  }\n\n  updateState(state) {\n    this.state = state;\n    this.updateTiles();\n    this.setTwo();\n  }\n\n  updateTiles() {\n    const fieldRow = document.querySelectorAll('.field-row');\n\n    for (let i = 0; i < fieldRow.length; i++) {\n      const cells = fieldRow[i].querySelectorAll('.field-cell');\n\n      for (let j = 0; j < cells.length; j++) {\n        const num = this.state[i][j];\n\n        cells[j].classList = 'field-cell';\n        cells[j].innerHTML = '';\n\n        if (num > 0) {\n          cells[j].classList.add(`field-cell--${num}`);\n          cells[j].innerHTML = num;\n        }\n      }\n    }\n\n    this.checkGameOver();\n    this.checkGameWin();\n  }\n\n  canMove(state) {\n    return state.some((arr) => arr.includes(0));\n  }\n\n  checkUpdate(state) {\n    return JSON.stringify(this.state) !== JSON.stringify(state);\n  }\n\n  checkGameWin() {\n    this.state.flat().some((tile) => {\n      if (tile === 2048) {\n        this.status = Game.Status.win;\n      }\n    });\n  }\n\n  checkGameOver() {\n    if (this.hasEmptyTile()) {\n      return;\n    }\n\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.columns; c++) {\n        if (\n          (r < 3 && this.state[r][c] === this.state[r + 1][c]) ||\n          (c < 3 && this.state[r][c] === this.state[r][c + 1])\n        ) {\n          return;\n        }\n      }\n    }\n\n    this.status = Game.Status.lose;\n  }\n\n  moveLeft() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = this.getState().map((row) => this.slide(row));\n\n    if (this.checkUpdate(newState)) {\n      this.updateState(newState);\n    }\n  }\n\n  moveRight() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = this.getState().map((row) => {\n      return this.slide([...row].reverse());\n    });\n\n    const reversedState = newState.map((row) => row.reverse());\n\n    if (this.checkUpdate(reversedState)) {\n      this.updateState(reversedState);\n    }\n  }\n\n  moveUp() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = [...this.state.map((arr) => [...arr])];\n\n    for (let c = 0; c < this.columns; c++) {\n      let row = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      row = this.slide(row);\n\n      for (let r = 0; r < this.rows; r++) {\n        newState[r][c] = row[r];\n      }\n    }\n\n    if (this.canMove(this.state.slice(0, 3)) || this.checkUpdate(newState)) {\n      this.updateState(newState);\n    }\n  }\n\n  moveDown() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = [...this.state.map((arr) => [...arr])];\n\n    for (let c = 0; c < this.columns; c++) {\n      let row = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      row = this.slide(row.reverse());\n      row.reverse();\n\n      for (let r = 0; r < this.rows; r++) {\n        newState[r][c] = row[r];\n      }\n    }\n\n    if (this.canMove(this.state.slice(1)) || this.checkUpdate(newState)) {\n      this.updateState(newState);\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.Status.playing;\n\n    this.setTwo();\n    this.setTwo();\n  }\n\n  restart() {\n    this.status = Game.Status.idle;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n    this.updateTiles();\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","key","value","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","instance","Constructor","status","Status","idle","JSON","parse","stringify","state","score","rows","columns","r","c","hasEmptyTile","found","Math","floor","random","updateTiles","row","filter","num","changedRow","filterZero","push","setTwo","fieldRow","document","querySelectorAll","cells","j","classList","innerHTML","add","concat","checkGameOver","checkGameWin","some","includes","_this","flat","tile","win","lose","getStatus","playing","newState","getState","map","slide","checkUpdate","updateState","reversedState","reverse","canMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","obj","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$showMessage","gameStatus","remove","addEventListener","e","contains","start","replace","textContent","restart","code","moveRight","moveLeft","moveUp","moveDown","getScore"],"version":3,"file":"index.2954f935.js.map"}