{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\nclass $a5fd07fa01589658$var$Game {\n    static Status = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ]){\n        this.status = $a5fd07fa01589658$var$Game.Status.idle;\n        this.initialState = JSON.parse(JSON.stringify(initialState));\n        this.state = initialState;\n        this.score = 0;\n        this.rows = 4;\n        this.columns = 4;\n    }\n    hasEmptyTile() {\n        for(let r = 0; r < this.rows; r++)for(let c = 0; c < this.columns; c++){\n            if (this.state[r][c] === 0) return true;\n        }\n        return false;\n    }\n    setTwo() {\n        if (!this.hasEmptyTile()) return;\n        let found = false;\n        while(!found){\n            const r = Math.floor(Math.random() * this.rows);\n            const c = Math.floor(Math.random() * this.columns);\n            if (this.state[r][c] === 0) {\n                this.state[r][c] = Math.random() >= 0.9 ? 4 : 2;\n                found = true;\n            }\n        }\n        this.updateTiles();\n    }\n    filterZero(row) {\n        return row.filter((num)=>num !== 0);\n    }\n    slide(row) {\n        let changedRow = this.filterZero(row);\n        for(let i = 0; i < changedRow.length; i++)if (changedRow[i] === changedRow[i + 1]) {\n            changedRow[i] += changedRow[i + 1];\n            changedRow[i + 1] = 0;\n            this.score += changedRow[i];\n        }\n        changedRow = this.filterZero(changedRow);\n        while(changedRow.length < 4)changedRow.push(0);\n        return changedRow;\n    }\n    updateState(state) {\n        this.state = state;\n        this.updateTiles();\n        this.setTwo();\n    }\n    updateTiles() {\n        const fieldRow = document.querySelectorAll(\".field-row\");\n        for(let i = 0; i < fieldRow.length; i++){\n            const cells = fieldRow[i].querySelectorAll(\".field-cell\");\n            for(let j = 0; j < cells.length; j++){\n                const num = this.state[i][j];\n                cells[j].classList = \"field-cell\";\n                cells[j].innerHTML = \"\";\n                if (num > 0) {\n                    cells[j].classList.add(`field-cell--${num}`);\n                    cells[j].innerHTML = num;\n                }\n            }\n        }\n        this.checkGameOver();\n        this.checkGameWin();\n    }\n    canMove(state) {\n        return state.some((arr)=>arr.includes(0));\n    }\n    checkUpdate(state) {\n        return JSON.stringify(this.state) !== JSON.stringify(state);\n    }\n    checkGameWin() {\n        this.state.flat().some((tile)=>{\n            if (tile === 2048) this.status = $a5fd07fa01589658$var$Game.Status.win;\n        });\n    }\n    checkGameOver() {\n        if (this.hasEmptyTile()) return;\n        for(let r = 0; r < this.rows; r++)for(let c = 0; c < this.columns; c++){\n            if (r < 3 && this.state[r][c] === this.state[r + 1][c] || c < 3 && this.state[r][c] === this.state[r][c + 1]) return;\n        }\n        this.status = $a5fd07fa01589658$var$Game.Status.lose;\n    }\n    moveLeft() {\n        if (this.getStatus() !== $a5fd07fa01589658$var$Game.Status.playing && this.getStatus() !== $a5fd07fa01589658$var$Game.Status.win) return;\n        const newState = this.getState().map((row)=>this.slide(row));\n        if (this.checkUpdate(newState)) this.updateState(newState);\n    }\n    moveRight() {\n        if (this.getStatus() !== $a5fd07fa01589658$var$Game.Status.playing && this.getStatus() !== $a5fd07fa01589658$var$Game.Status.win) return;\n        const newState = this.getState().map((row)=>{\n            return this.slide([\n                ...row\n            ].reverse());\n        });\n        const reversedState = newState.map((row)=>row.reverse());\n        if (this.checkUpdate(reversedState)) this.updateState(reversedState);\n    }\n    moveUp() {\n        if (this.getStatus() !== $a5fd07fa01589658$var$Game.Status.playing && this.getStatus() !== $a5fd07fa01589658$var$Game.Status.win) return;\n        const newState = [\n            ...this.state.map((arr)=>[\n                    ...arr\n                ])\n        ];\n        for(let c = 0; c < this.columns; c++){\n            let row = [\n                this.state[0][c],\n                this.state[1][c],\n                this.state[2][c],\n                this.state[3][c]\n            ];\n            row = this.slide(row);\n            for(let r = 0; r < this.rows; r++)newState[r][c] = row[r];\n        }\n        if (this.canMove(this.state.slice(0, 3)) || this.checkUpdate(newState)) this.updateState(newState);\n    }\n    moveDown() {\n        if (this.getStatus() !== $a5fd07fa01589658$var$Game.Status.playing && this.getStatus() !== $a5fd07fa01589658$var$Game.Status.win) return;\n        const newState = [\n            ...this.state.map((arr)=>[\n                    ...arr\n                ])\n        ];\n        for(let c = 0; c < this.columns; c++){\n            let row = [\n                this.state[0][c],\n                this.state[1][c],\n                this.state[2][c],\n                this.state[3][c]\n            ];\n            row = this.slide(row.reverse());\n            row.reverse();\n            for(let r = 0; r < this.rows; r++)newState[r][c] = row[r];\n        }\n        if (this.canMove(this.state.slice(1)) || this.checkUpdate(newState)) this.updateState(newState);\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$var$Game.Status.playing;\n        this.setTwo();\n        this.setTwo();\n    }\n    restart() {\n        this.status = $a5fd07fa01589658$var$Game.Status.idle;\n        this.state = JSON.parse(JSON.stringify(this.initialState));\n        this.score = 0;\n        this.updateTiles();\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports([\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n]);\nconst $09e991522ca7e64e$var$button = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$score = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nfunction $09e991522ca7e64e$var$showMessage() {\n    const gameStatus = $09e991522ca7e64e$var$game.getStatus();\n    if (gameStatus === \"playing\") $09e991522ca7e64e$var$messageStart.classList.add(\"hidden\");\n    else if (gameStatus === \"win\") $09e991522ca7e64e$var$messageWin.classList.remove(\"hidden\");\n    else if (gameStatus === \"lose\") $09e991522ca7e64e$var$messageLose.classList.remove(\"hidden\");\n    else if (gameStatus === \"idle\") {\n        $09e991522ca7e64e$var$messageStart.classList.remove(\"hidden\");\n        $09e991522ca7e64e$var$messageWin.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageLose.classList.add(\"hidden\");\n    }\n}\n$09e991522ca7e64e$var$button.addEventListener(\"click\", (e)=>{\n    if ($09e991522ca7e64e$var$button.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$button.classList.replace(\"start\", \"restart\");\n        $09e991522ca7e64e$var$button.textContent = \"Restart\";\n    } else {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$button.classList.replace(\"restart\", \"start\");\n        $09e991522ca7e64e$var$button.textContent = \"Start\";\n        $09e991522ca7e64e$var$score.textContent = 0;\n    }\n    $09e991522ca7e64e$var$showMessage();\n});\ndocument.addEventListener(\"keyup\", (e)=>{\n    if ($09e991522ca7e64e$var$game.getStatus() !== \"playing\" && $09e991522ca7e64e$var$game.getStatus() !== \"win\") return;\n    switch(e.code){\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$game.moveRight();\n            break;\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$game.moveLeft();\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$game.moveDown();\n            break;\n    }\n    $09e991522ca7e64e$var$score.textContent = $09e991522ca7e64e$var$game.getScore();\n    $09e991522ca7e64e$var$showMessage();\n});\n\n\n//# sourceMappingURL=index.bf259cc4.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game([\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n]);\n\nconst button = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction showMessage() {\n  const gameStatus = game.getStatus();\n\n  if (gameStatus === 'playing') {\n    messageStart.classList.add('hidden');\n  } else if (gameStatus === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (gameStatus === 'lose') {\n    messageLose.classList.remove('hidden');\n  } else if (gameStatus === 'idle') {\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  }\n}\n\nbutton.addEventListener('click', (e) => {\n  if (button.classList.contains('start')) {\n    game.start();\n    button.classList.replace('start', 'restart');\n    button.textContent = 'Restart';\n  } else {\n    game.restart();\n    button.classList.replace('restart', 'start');\n    button.textContent = 'Start';\n    score.textContent = 0;\n  }\n\n  showMessage();\n});\n\ndocument.addEventListener('keyup', (e) => {\n  if (game.getStatus() !== 'playing' && game.getStatus() !== 'win') {\n    return;\n  }\n\n  switch (e.code) {\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  score.textContent = game.getScore();\n  showMessage();\n});\n","'use strict';\n\nclass Game {\n  static Status = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.status = Game.Status.idle;\n    this.initialState = JSON.parse(JSON.stringify(initialState));\n    this.state = initialState;\n    this.score = 0;\n\n    this.rows = 4;\n    this.columns = 4;\n  }\n\n  hasEmptyTile() {\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.columns; c++) {\n        if (this.state[r][c] === 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  setTwo() {\n    if (!this.hasEmptyTile()) {\n      return;\n    }\n\n    let found = false;\n\n    while (!found) {\n      const r = Math.floor(Math.random() * this.rows);\n      const c = Math.floor(Math.random() * this.columns);\n\n      if (this.state[r][c] === 0) {\n        this.state[r][c] = Math.random() >= 0.9 ? 4 : 2;\n        found = true;\n      }\n    }\n\n    this.updateTiles();\n  }\n\n  filterZero(row) {\n    return row.filter((num) => num !== 0);\n  }\n\n  slide(row) {\n    let changedRow = this.filterZero(row);\n\n    for (let i = 0; i < changedRow.length; i++) {\n      if (changedRow[i] === changedRow[i + 1]) {\n        changedRow[i] += changedRow[i + 1];\n        changedRow[i + 1] = 0;\n        this.score += changedRow[i];\n      }\n    }\n\n    changedRow = this.filterZero(changedRow);\n\n    while (changedRow.length < 4) {\n      changedRow.push(0);\n    }\n\n    return changedRow;\n  }\n\n  updateState(state) {\n    this.state = state;\n    this.updateTiles();\n    this.setTwo();\n  }\n\n  updateTiles() {\n    const fieldRow = document.querySelectorAll('.field-row');\n\n    for (let i = 0; i < fieldRow.length; i++) {\n      const cells = fieldRow[i].querySelectorAll('.field-cell');\n\n      for (let j = 0; j < cells.length; j++) {\n        const num = this.state[i][j];\n\n        cells[j].classList = 'field-cell';\n        cells[j].innerHTML = '';\n\n        if (num > 0) {\n          cells[j].classList.add(`field-cell--${num}`);\n          cells[j].innerHTML = num;\n        }\n      }\n    }\n\n    this.checkGameOver();\n    this.checkGameWin();\n  }\n\n  canMove(state) {\n    return state.some((arr) => arr.includes(0));\n  }\n\n  checkUpdate(state) {\n    return JSON.stringify(this.state) !== JSON.stringify(state);\n  }\n\n  checkGameWin() {\n    this.state.flat().some((tile) => {\n      if (tile === 2048) {\n        this.status = Game.Status.win;\n      }\n    });\n  }\n\n  checkGameOver() {\n    if (this.hasEmptyTile()) {\n      return;\n    }\n\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.columns; c++) {\n        if (\n          (r < 3 && this.state[r][c] === this.state[r + 1][c]) ||\n          (c < 3 && this.state[r][c] === this.state[r][c + 1])\n        ) {\n          return;\n        }\n      }\n    }\n\n    this.status = Game.Status.lose;\n  }\n\n  moveLeft() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = this.getState().map((row) => this.slide(row));\n\n    if (this.checkUpdate(newState)) {\n      this.updateState(newState);\n    }\n  }\n\n  moveRight() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = this.getState().map((row) => {\n      return this.slide([...row].reverse());\n    });\n\n    const reversedState = newState.map((row) => row.reverse());\n\n    if (this.checkUpdate(reversedState)) {\n      this.updateState(reversedState);\n    }\n  }\n\n  moveUp() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = [...this.state.map((arr) => [...arr])];\n\n    for (let c = 0; c < this.columns; c++) {\n      let row = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      row = this.slide(row);\n\n      for (let r = 0; r < this.rows; r++) {\n        newState[r][c] = row[r];\n      }\n    }\n\n    if (this.canMove(this.state.slice(0, 3)) || this.checkUpdate(newState)) {\n      this.updateState(newState);\n    }\n  }\n\n  moveDown() {\n    if (\n      this.getStatus() !== Game.Status.playing &&\n      this.getStatus() !== Game.Status.win\n    ) {\n      return;\n    }\n\n    const newState = [...this.state.map((arr) => [...arr])];\n\n    for (let c = 0; c < this.columns; c++) {\n      let row = [\n        this.state[0][c],\n        this.state[1][c],\n        this.state[2][c],\n        this.state[3][c],\n      ];\n\n      row = this.slide(row.reverse());\n      row.reverse();\n\n      for (let r = 0; r < this.rows; r++) {\n        newState[r][c] = row[r];\n      }\n    }\n\n    if (this.canMove(this.state.slice(1)) || this.checkUpdate(newState)) {\n      this.updateState(newState);\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.Status.playing;\n\n    this.setTwo();\n    this.setTwo();\n  }\n\n  restart() {\n    this.status = Game.Status.idle;\n    this.state = JSON.parse(JSON.stringify(this.initialState));\n    this.score = 0;\n    this.updateTiles();\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$var$Game","Status","idle","playing","win","lose","constructor","initialState","status","JSON","parse","stringify","state","score","rows","columns","hasEmptyTile","r","c","setTwo","found","Math","floor","random","updateTiles","filterZero","row","filter","num","slide","changedRow","i","length","push","updateState","fieldRow","document","querySelectorAll","cells","j","classList","innerHTML","add","checkGameOver","checkGameWin","canMove","some","arr","includes","checkUpdate","flat","tile","moveLeft","getStatus","newState","getState","map","moveRight","reversedState","reverse","moveUp","slice","moveDown","getScore","start","restart","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$button","querySelector","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$showMessage","gameStatus","remove","addEventListener","e","contains","replace","textContent","code"],"version":3,"file":"index.bf259cc4.js.map"}